{"version":3,"sources":["components/CountryInfo/CountryInfo.module.css","components/InfoCardLineItem/InfoCardLineItem.module.css","components/HomePage/HomePage.module.css","components/InfoCard/InfoCard.module.css","components/CountryList/CountryList.module.css","components/CountryItem/CountryItem.module.css","components/SearchInput/SearchInput.module.css","services/countriesApi.js","components/InfoCardLineItem/InfoCardLineItem.tsx","components/CountryItem/CountryItem.tsx","components/CountryList/CountryList.tsx","components/SearchInput/SearchInput.tsx","components/HomePage/HomePage.tsx","components/InfoCard/InfoCard.tsx","icons/arrow_back.svg","components/CountryInfo/CountryInfo.tsx","components/HomePage/CountryInfoPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","name","fetch","InfoCardLineItem","props","className","styles","countryInfoFlex","countryInfoText","title","countryInfoDesc","value","CountryItem","country","link","to","toLowerCase","capital","population","languages","map","language","join","currencies","currency","CountryList","countries","index","key","countryWrap","SearchInput","searchInput","type","placeholder","this","onChange","onChanged","autoComplete","Component","HomePage","state","searchText","e","a","setState","target","length","countriesApi","response","status","json","countriesData","console","log","main","InfoCard","countryInfoWrap","countryInfoTitle","children","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","viewBox","ref","ForwardRef","forwardRef","CountryInfo","countryInfo","flexWrap","flexColumn","region","subregion","latlng","area","callingCodes","timezones","topLevelDomain","src","flag","alt","countryInfoFlag","center","zoom","width","geometry","options","draggable","fillColor","strokeColor","strokeOpacity","strokeWidth","CountryInfoPage","warningMessage","componentDidMount","countryName","match","params","foundedCountries","pop","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.06942799.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"CountryInfo_link__33RcY\",\"countryInfo\":\"CountryInfo_countryInfo__2BZvL\",\"countryInfoTitle\":\"CountryInfo_countryInfoTitle__hX028\",\"countryInfoFlag\":\"CountryInfo_countryInfoFlag__grtbS\",\"flexWrap\":\"CountryInfo_flexWrap__2sp6r\",\"flexColumn\":\"CountryInfo_flexColumn__JRV9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"InfoCardLineItem_link__1Y1UE\",\"countryInfoFlex\":\"InfoCardLineItem_countryInfoFlex__2DND4\",\"countryInfoDesc\":\"InfoCardLineItem_countryInfoDesc__23vdI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"HomePage_main__1ri2P\",\"title\":\"HomePage_title__3J7RG\",\"countries\":\"HomePage_countries__2AOu0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"InfoCard_link__1vvu_\",\"countryInfoWrap\":\"InfoCard_countryInfoWrap__1Rvh8\",\"countryInfoTitle\":\"InfoCard_countryInfoTitle__1MSQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"CountryList_link__2X_07\",\"country\":\"CountryList_country__2WyDj\",\"countryWrap\":\"CountryList_countryWrap__EkK8Z\",\"countryTitle\":\"CountryList_countryTitle__26js8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"CountryItem_link__9NBTX\",\"countryItem\":\"CountryItem_countryItem__CaZwU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchInput_searchInput__2APvB\"};","const apiUrl = 'https://restcountries.eu/rest/v2/name/';\n\nexport default {\n    getByName: (name) => {\n        return fetch(apiUrl + name);\n    },\n};","import React from \"react\";\nimport styles from \"./InfoCardLineItem.module.css\";\n\ntype InfoItemProps = {\n  title: string,\n  value: any,\n}\n\nconst InfoCardLineItem = (props: InfoItemProps) => <div className={styles.countryInfoFlex}>\n  <p className={styles.countryInfoText}>{props.title}</p>\n  <p className={styles.countryInfoDesc}>{props.value}</p>\n</div>;\n\nexport default InfoCardLineItem;","import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport styles from \"./CountryItem.module.css\";\nimport Country from \"../../interfaces/Country\";\nimport InfoCardLineItem from \"../InfoCardLineItem/InfoCardLineItem\";\n\nconst CountryItem = (props: { country: Country }) =>\n  <>\n    <InfoCardLineItem title={props.country.name} value={<Link className={styles.link} to={'/info/' + props.country.name.toLowerCase()}>more info</Link>}/>\n    <InfoCardLineItem title={'Capital'} value={props.country.capital}/>\n    <InfoCardLineItem title={'Population'} value={props.country.population}/>\n    <InfoCardLineItem title={'Language'} value={props.country.languages.map((language: any) => language.name).join(', ')}/>\n    <InfoCardLineItem title={'Currency'} value={props.country.currencies.map((currency: any) => currency.name).join(', ')}/>\n  </>;\n\nexport default CountryItem;\n","import React from \"react\";\nimport styles from \"./CountryList.module.css\";\nimport CountryItem from \"../CountryItem/CountryItem\";\nimport Country from \"../../interfaces/Country\";\n\nconst CountryList = (props: any) => props.countries.map((country: Country, index: number) =>\n  <div key={index} className={styles.countryWrap}>\n    <CountryItem country={country} />\n  </div>\n);\n\nexport default CountryList;","import React, {Component} from \"react\";\nimport Country from \"../../interfaces/Country\";\nimport styles from \"./SearchInput.module.css\"\n\ntype State = {\n  searchText: string,\n  countries: Country[],\n};\n\ntype Props = {\n  onChanged: (e: any) => void,\n  value: string\n}\n\nclass SearchInput extends Component<Props, State> {\n\n  render() {\n    return (\n      <input className={styles.searchInput}\n        type='text'\n        name=\"country\"\n        placeholder=\"Enter country name\"\n        value={this.props.value}\n        onChange={this.props.onChanged}\n        autoComplete=\"off\"\n      />\n    );\n  }\n}\n\nexport default SearchInput;\n","import React, {Component} from \"react\";\nimport countriesApi from \"../../services/countriesApi\";\nimport CountryList from \"../../components/CountryList/CountryList\";\nimport SearchInput from \"../../components/SearchInput/SearchInput\";\nimport Country from \"../../interfaces/Country\";\nimport styles from \"./HomePage.module.css\";\n\ntype State = {\n  countries: Country[],\n  searchText: string,\n};\n\nclass HomePage extends Component<{}, State> {\n\n  state: State = {\n    countries: [],\n    searchText: '',\n  };\n\n  onChanged = async (e: any) => {\n    this.setState({searchText: e.target.value});\n\n    if (e.target.value.length < 2) {\n      this.setState({countries: []});\n      return;\n    }\n    const response = await countriesApi.getByName(this.state.searchText);\n    if (response.status === 200) {\n      const countriesData = await response.json();\n      console.log(countriesData);\n      this.setState({countries: countriesData});\n    } else {\n      console.log('error');\n    }\n  };\n\n  render() {\n    return (\n      <main className={styles.main}>\n        <h1 className={styles.title}>Search for a country</h1>\n        <SearchInput value={this.state.searchText} onChanged={this.onChanged} />\n        <div className={styles.countries}>\n          <CountryList countries={this.state.countries} />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default HomePage;","import React from \"react\";\nimport styles from \"./InfoCard.module.css\";\n\nconst InfoCard = (props: { title: string, children: any[] }) =>\n  <div className={styles.countryInfoWrap}>\n    <p className={styles.countryInfoTitle}>{props.title}</p>\n    {props.children}\n  </div>;\n\nexport default InfoCard;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M.35 8.252L6.143.385c.677-.92 2.222-.02 1.535.914-1.669 2.265-3.337 4.53-5.004 6.796h31.824c1.146 0 1.146 1.809 0 1.809H2.674L7.678 16.7c.688.934-.856 1.834-1.535.914L.35 9.746c-.467-.343-.467-1.152 0-1.493z\"\n});\n\nvar SvgArrowBack = function SvgArrowBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 36 18\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow_back.2ae46ecc.svg\";\nexport { ForwardRef as ReactComponent };","import React, {Component} from \"react\";\nimport styles from \"./CountryInfo.module.css\";\nimport Country from \"../../interfaces/Country\";\nimport {Link} from \"react-router-dom\";\nimport InfoCard from \"../InfoCard/InfoCard\";\nimport InfoCardLineItem from \"../InfoCardLineItem/InfoCardLineItem\";\nimport {ReactComponent as ArrowBack} from \"../../icons/arrow_back.svg\";\nimport {YMaps, Map, Circle} from \"react-yandex-maps\";\n\ntype CountryInfoProps = {\n  country: Country\n};\n\nclass CountryInfo extends Component <CountryInfoProps> {\n\n  render() {\n    return (\n      <div className={styles.countryInfo}>\n        <Link className={styles.link} to={'/'}>\n          <ArrowBack />\n          back\n        </Link>\n        <p className={styles.countryInfoTitle}>{this.props.country.name}</p>\n        <div className={styles.flexWrap}>\n          <div className={styles.flexColumn}>\n            <InfoCard title={'General info'}>\n              <InfoCardLineItem title={'Capital'} value={this.props.country.capital} />\n              <InfoCardLineItem title={'Population'} value={this.props.country.population} />\n              <InfoCardLineItem title={'Language'}\n                value={this.props.country.languages.map((language: any) => language.name).join(', ')} />\n              <InfoCardLineItem title={'Currency'}\n                value={this.props.country.currencies.map((currency: any) => currency.name).join(', ')} />\n            </InfoCard>\n            <InfoCard title={'Geography'}>\n              <InfoCardLineItem title={'Region'} value={this.props.country.region} />\n              <InfoCardLineItem title={'Subregion'} value={this.props.country.subregion} />\n              <InfoCardLineItem title={'Lat/Lng'} value={this.props.country.latlng.join('/')} />\n              <InfoCardLineItem title={'Area'} value={this.props.country.area} />\n            </InfoCard>\n            <InfoCard title={'Other info'}>\n              <InfoCardLineItem title={'International calling code'} value={this.props.country.callingCodes} />\n              <InfoCardLineItem title={'Timezone'} value={this.props.country.timezones.join(', ')} />\n              <InfoCardLineItem title={'Land borders'}\n                value={this.props.country.languages.map((language: any) => language.name).join(', ')} />\n              <InfoCardLineItem title={'Top level domain'} value={this.props.country.topLevelDomain} />\n            </InfoCard>\n          </div>\n          <div className={styles.flexColumn}>\n            <img src={this.props.country.flag} alt={this.props.country.name} className={styles.countryInfoFlag} />\n            <YMaps>\n              <div>\n                <Map state={{center: [this.props.country.latlng[0], this.props.country.latlng[1]], zoom: 4}}\n                  width='400px'>\n                  <Circle\n                    geometry={[[this.props.country.latlng[0], this.props.country.latlng[1]], this.props.country.area]}\n                    options={{\n                      draggable: false,\n                      fillColor: 'rgba(156,156,156,0.47)',\n                      strokeColor: '#787878',\n                      strokeOpacity: 0.8,\n                      strokeWidth: 3,\n                    }}\n                  />\n                </Map>\n              </div>\n            </YMaps>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CountryInfo;","import React, {Component} from \"react\";\nimport Country from \"../../interfaces/Country\";\nimport styles from \"../CountryInfo/CountryInfo.module.css\";\nimport CountryInfo from \"../CountryInfo/CountryInfo\";\nimport countriesApi from \"../../services/countriesApi\";\n\ntype State = {\n  country: Country | null,\n  warningMessage: string | null,\n};\n\nclass CountryInfoPage extends Component<any, State> {\n\n  state: State = {\n    country: null,\n    warningMessage: null,\n  };\n\n  componentDidMount = async () => {\n    const countryName = this.props.match.params.countryName;\n\n    const response = await countriesApi.getByName(countryName);\n\n    if (response.status === 200) {\n      const foundedCountries = await response.json();\n\n      const country = foundedCountries.pop();\n\n      this.setState({country: country});\n    } else {\n      console.log('error');\n\n      this.setState({warningMessage: 'Not found'});\n      return;\n    }\n  };\n\n  render() {\n\n    if (this.state.warningMessage) {\n      return <h1>{this.state.warningMessage}</h1>;\n    }\n\n    if (this.state.country == null) {\n      return <h1>Loading...</h1>;\n    }\n\n    return (\n      <main className={styles.main}>\n        <CountryInfo country={this.state.country} />\n      </main>\n    );\n  }\n}\n\nexport default CountryInfoPage;","import React, {Component} from \"react\";\nimport './App.css';\nimport './styles/common.css'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n// components\nimport HomePage from \"./components/HomePage/HomePage\";\nimport CountryInfoPage from \"./components/HomePage/CountryInfoPage\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route path='/' exact={true} component={HomePage} />\n            <Route path='/info/:countryName' component={CountryInfoPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}